basePath: /api/v1
definitions:
  dto.User:
    properties:
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      uid:
        type: string
    type: object
  dto.UserCreate:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      uid:
        type: string
    type: object
  dto.UserUpdate:
    properties:
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  v1.errResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a Dictup server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger API
  version: "1.0"
paths:
  /users:
    get:
      description: get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.User'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: List users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Create user
      tags:
      - Users
  /users/{uid}:
    delete:
      description: Delete user
      parameters:
      - description: delete by uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Delete user
      tags:
      - Users
    get:
      description: Get user info
      parameters:
      - description: search by uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: User info
      tags:
      - Users
    put:
      description: Update user
      parameters:
      - description: update by uid
        in: path
        name: uid
        required: true
        type: string
      - description: update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Update user
      tags:
      - Users
swagger: "2.0"
