basePath: /
definitions:
  dto.ChangeUserPassword:
    properties:
      old_password:
        type: string
      password:
        type: string
    required:
    - old_password
    - password
    type: object
  dto.LangBinding:
    properties:
      active:
        type: boolean
      from_iso:
        type: string
      to_iso:
        type: string
    required:
    - from_iso
    - to_iso
    type: object
  dto.TokenDTO:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    required:
    - access_token
    - refresh_token
    type: object
  dto.User:
    properties:
      email:
        type: string
      lang_binding:
        items:
          $ref: '#/definitions/dto.LangBinding'
        type: array
      name:
        type: string
      oauth_user:
        type: boolean
      phone:
        type: string
      uid:
        type: string
    type: object
  dto.UserCreate:
    properties:
      email:
        type: string
      lang_binding:
        items:
          $ref: '#/definitions/dto.LangBinding'
        type: array
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    required:
    - email
    - lang_binding
    - name
    type: object
  dto.UserCredentials:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.UserUpdate:
    properties:
      lang_binding:
        items:
          $ref: '#/definitions/dto.LangBinding'
        type: array
      name:
        type: string
      phone:
        type: string
    required:
    - lang_binding
    type: object
  dto.Word:
    properties:
      added_at:
        type: string
      name:
        type: string
    type: object
  dto.WordCreate:
    properties:
      group_id:
        type: string
      name:
        type: string
    required:
    - group_id
    - name
    type: object
  dto.WordGroup:
    properties:
      default:
        type: boolean
      id:
        type: string
      lang_binding:
        $ref: '#/definitions/dto.LangBinding'
      name:
        type: string
    required:
    - lang_binding
    type: object
  dto.WordGroupCreate:
    properties:
      lang_binding:
        $ref: '#/definitions/dto.LangBinding'
      name:
        type: string
    required:
    - lang_binding
    type: object
  dto.WordGroupMovement:
    properties:
      from_group_id:
        type: string
      to_group_id:
        type: string
    required:
    - from_group_id
    - to_group_id
    type: object
  v1.errResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a Dictup server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger API
  version: "1.0"
paths:
  /api/v1/users:
    get:
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: List users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Create user
      tags:
      - Users
  /api/v1/users/{uid}:
    delete:
      description: Delete user
      parameters:
      - description: delete by uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - Users
    get:
      description: Get user info
      parameters:
      - description: user uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: User info
      tags:
      - Users
    patch:
      description: Update user
      parameters:
      - description: update by uid
        in: path
        name: uid
        required: true
        type: string
      - description: update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - Users
  /api/v1/users/pass:
    put:
      description: Change user password
      parameters:
      - description: Change user password dto
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.ChangeUserPassword'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Change user password
      tags:
      - Users
  /api/v1/wordgroups:
    post:
      consumes:
      - application/json
      description: Create new word group
      parameters:
      - description: Word Group
        in: body
        name: word
        required: true
        schema:
          $ref: '#/definitions/dto.WordGroupCreate'
      produces:
      - application/json
      responses:
        "201":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Create word group
      tags:
      - WordGroups
  /api/v1/wordgroups/{gid}:
    get:
      description: Get word group by id
      parameters:
      - description: group id
        in: path
        name: gid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.WordGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Word group by id
      tags:
      - WordGroups
  /api/v1/wordgroups/langs/{from_iso}/{to_iso}:
    get:
      description: Get all word groups for language
      parameters:
      - description: from language iso code
        in: path
        name: from_iso
        required: true
        type: string
      - description: to language iso code
        in: path
        name: to_iso
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.WordGroup'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: List word groups for language
      tags:
      - WordGroups
  /api/v1/wordgroups/langs/{from_iso}/{to_iso}/default:
    get:
      description: Get word group for language
      parameters:
      - description: from lang iso code
        in: path
        name: from_iso
        required: true
        type: string
      - description: to lang iso code
        in: path
        name: to_iso
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.WordGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Get default word group for language
      tags:
      - WordGroups
  /api/v1/words:
    post:
      consumes:
      - application/json
      description: Create new word
      parameters:
      - description: Word
        in: body
        name: word
        required: true
        schema:
          $ref: '#/definitions/dto.WordCreate'
      produces:
      - application/json
      responses:
        "201":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Create word
      tags:
      - Words
  /api/v1/words/{name}/groups:
    post:
      description: Move word to group
      parameters:
      - description: word name
        in: path
        name: name
        required: true
        type: string
      - description: Word Group Movement
        in: body
        name: move
        required: true
        schema:
          $ref: '#/definitions/dto.WordGroupMovement'
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Move word to group
      tags:
      - Words
  /api/v1/words/{name}/groups/{gid}:
    delete:
      description: Remove word from group
      parameters:
      - description: word name
        in: path
        name: name
        required: true
        type: string
      - description: group id
        in: path
        name: gid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Remove word from group
      tags:
      - Words
    post:
      description: Add word to group
      parameters:
      - description: word name
        in: path
        name: name
        required: true
        type: string
      - description: group id
        in: path
        name: gid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Add word to group
      tags:
      - Words
  /api/v1/words/groups/{gid}:
    get:
      description: Get words by group
      parameters:
      - description: group id
        in: path
        name: gid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Word'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      security:
      - ApiKeyAuth: []
      summary: List words by group
      tags:
      - Words
  /auth:
    post:
      description: Generate access and refresh token
      parameters:
      - description: User credentials
        in: body
        name: tokenRequest
        required: true
        schema:
          $ref: '#/definitions/dto.UserCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Create new token pair
      tags:
      - Token
  /auth/google:
    get:
      description: Sign up/in with Google
      produces:
      - application/json
      responses:
        "307":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Google Login
      tags:
      - Token
  /refresh:
    post:
      description: Generate access and refresh token by refresh token
      parameters:
      - description: refresh token
        in: query
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Generate new token pair by refresh token
      tags:
      - Token
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
